// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: ddex/v1beta1/resource.proto

package v1beta1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Resource:
	//
	//	*Resource_SoundRecording_
	//	*Resource_Image_
	Resource isResource_Resource `protobuf_oneof:"resource"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0}
}

func (m *Resource) GetResource() isResource_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (x *Resource) GetSoundRecording() *Resource_SoundRecording {
	if x, ok := x.GetResource().(*Resource_SoundRecording_); ok {
		return x.SoundRecording
	}
	return nil
}

func (x *Resource) GetImage() *Resource_Image {
	if x, ok := x.GetResource().(*Resource_Image_); ok {
		return x.Image
	}
	return nil
}

type isResource_Resource interface {
	isResource_Resource()
}

type Resource_SoundRecording_ struct {
	SoundRecording *Resource_SoundRecording `protobuf:"bytes,1,opt,name=sound_recording,json=soundRecording,proto3,oneof"`
}

type Resource_Image_ struct {
	Image *Resource_Image `protobuf:"bytes,2,opt,name=image,proto3,oneof"`
}

func (*Resource_SoundRecording_) isResource_Resource() {}

func (*Resource_Image_) isResource_Resource() {}

type Resource_ResourceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Isrc          string                    `protobuf:"bytes,1,opt,name=isrc,proto3" json:"isrc,omitempty"`
	ProprietaryId []*Resource_ProprietaryId `protobuf:"bytes,2,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty"`
}

func (x *Resource_ResourceId) Reset() {
	*x = Resource_ResourceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_ResourceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_ResourceId) ProtoMessage() {}

func (x *Resource_ResourceId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_ResourceId.ProtoReflect.Descriptor instead.
func (*Resource_ResourceId) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Resource_ResourceId) GetIsrc() string {
	if x != nil {
		return x.Isrc
	}
	return ""
}

func (x *Resource_ResourceId) GetProprietaryId() []*Resource_ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

type Resource_ProprietaryId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace     string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ProprietaryId string `protobuf:"bytes,2,opt,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty"`
}

func (x *Resource_ProprietaryId) Reset() {
	*x = Resource_ProprietaryId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_ProprietaryId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_ProprietaryId) ProtoMessage() {}

func (x *Resource_ProprietaryId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_ProprietaryId.ProtoReflect.Descriptor instead.
func (*Resource_ProprietaryId) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Resource_ProprietaryId) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Resource_ProprietaryId) GetProprietaryId() string {
	if x != nil {
		return x.ProprietaryId
	}
	return ""
}

type Resource_DisplayTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleText string `protobuf:"bytes,1,opt,name=title_text,json=titleText,proto3" json:"title_text,omitempty"`
}

func (x *Resource_DisplayTitle) Reset() {
	*x = Resource_DisplayTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_DisplayTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_DisplayTitle) ProtoMessage() {}

func (x *Resource_DisplayTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_DisplayTitle.ProtoReflect.Descriptor instead.
func (*Resource_DisplayTitle) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Resource_DisplayTitle) GetTitleText() string {
	if x != nil {
		return x.TitleText
	}
	return ""
}

type Resource_DisplayArtist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtistPartyReference string `protobuf:"bytes,1,opt,name=artist_party_reference,json=artistPartyReference,proto3" json:"artist_party_reference,omitempty"`
	DisplayArtistRole    string `protobuf:"bytes,2,opt,name=display_artist_role,json=displayArtistRole,proto3" json:"display_artist_role,omitempty"`
	ArtisticRole         string `protobuf:"bytes,3,opt,name=artistic_role,json=artisticRole,proto3" json:"artistic_role,omitempty"`
}

func (x *Resource_DisplayArtist) Reset() {
	*x = Resource_DisplayArtist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_DisplayArtist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_DisplayArtist) ProtoMessage() {}

func (x *Resource_DisplayArtist) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_DisplayArtist.ProtoReflect.Descriptor instead.
func (*Resource_DisplayArtist) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Resource_DisplayArtist) GetArtistPartyReference() string {
	if x != nil {
		return x.ArtistPartyReference
	}
	return ""
}

func (x *Resource_DisplayArtist) GetDisplayArtistRole() string {
	if x != nil {
		return x.DisplayArtistRole
	}
	return ""
}

func (x *Resource_DisplayArtist) GetArtisticRole() string {
	if x != nil {
		return x.ArtisticRole
	}
	return ""
}

type Resource_SoundRecording struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceReference     string                                         `protobuf:"bytes,1,opt,name=resource_reference,json=resourceReference,proto3" json:"resource_reference,omitempty"`
	Type                  string                                         `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	SoundRecordingEdition *Resource_SoundRecording_SoundRecordingEdition `protobuf:"bytes,3,opt,name=sound_recording_edition,json=soundRecordingEdition,proto3" json:"sound_recording_edition,omitempty"`
	DisplayTitleText      string                                         `protobuf:"bytes,4,opt,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty"`
	DisplayTitle          *Resource_DisplayTitle                         `protobuf:"bytes,5,opt,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty"`
	VersionType           string                                         `protobuf:"bytes,6,opt,name=version_type,json=versionType,proto3" json:"version_type,omitempty"`
	DisplayArtistName     string                                         `protobuf:"bytes,7,opt,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty"`
	DisplayArtist         []*Resource_DisplayArtist                      `protobuf:"bytes,8,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty"`
	Contributor           []*Resource_SoundRecording_Contributor         `protobuf:"bytes,9,rep,name=contributor,proto3" json:"contributor,omitempty"`
	Duration              string                                         `protobuf:"bytes,10,opt,name=duration,proto3" json:"duration,omitempty"`
	FirstPublicationDate  string                                         `protobuf:"bytes,11,opt,name=first_publication_date,json=firstPublicationDate,proto3" json:"first_publication_date,omitempty"`
	ParentalWarningType   string                                         `protobuf:"bytes,12,opt,name=parental_warning_type,json=parentalWarningType,proto3" json:"parental_warning_type,omitempty"`
	LanguageOfPerformance string                                         `protobuf:"bytes,13,opt,name=language_of_performance,json=languageOfPerformance,proto3" json:"language_of_performance,omitempty"`
}

func (x *Resource_SoundRecording) Reset() {
	*x = Resource_SoundRecording{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_SoundRecording) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_SoundRecording) ProtoMessage() {}

func (x *Resource_SoundRecording) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_SoundRecording.ProtoReflect.Descriptor instead.
func (*Resource_SoundRecording) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Resource_SoundRecording) GetResourceReference() string {
	if x != nil {
		return x.ResourceReference
	}
	return ""
}

func (x *Resource_SoundRecording) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Resource_SoundRecording) GetSoundRecordingEdition() *Resource_SoundRecording_SoundRecordingEdition {
	if x != nil {
		return x.SoundRecordingEdition
	}
	return nil
}

func (x *Resource_SoundRecording) GetDisplayTitleText() string {
	if x != nil {
		return x.DisplayTitleText
	}
	return ""
}

func (x *Resource_SoundRecording) GetDisplayTitle() *Resource_DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *Resource_SoundRecording) GetVersionType() string {
	if x != nil {
		return x.VersionType
	}
	return ""
}

func (x *Resource_SoundRecording) GetDisplayArtistName() string {
	if x != nil {
		return x.DisplayArtistName
	}
	return ""
}

func (x *Resource_SoundRecording) GetDisplayArtist() []*Resource_DisplayArtist {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *Resource_SoundRecording) GetContributor() []*Resource_SoundRecording_Contributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

func (x *Resource_SoundRecording) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Resource_SoundRecording) GetFirstPublicationDate() string {
	if x != nil {
		return x.FirstPublicationDate
	}
	return ""
}

func (x *Resource_SoundRecording) GetParentalWarningType() string {
	if x != nil {
		return x.ParentalWarningType
	}
	return ""
}

func (x *Resource_SoundRecording) GetLanguageOfPerformance() string {
	if x != nil {
		return x.LanguageOfPerformance
	}
	return ""
}

type Resource_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceReference string                           `protobuf:"bytes,1,opt,name=resource_reference,json=resourceReference,proto3" json:"resource_reference,omitempty"`
	Type              string                           `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	ResourceId        *Resource_ResourceId             `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	TechnicalDetails  *Resource_Image_TechnicalDetails `protobuf:"bytes,4,opt,name=technical_details,json=technicalDetails,proto3" json:"technical_details,omitempty"`
}

func (x *Resource_Image) Reset() {
	*x = Resource_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_Image) ProtoMessage() {}

func (x *Resource_Image) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_Image.ProtoReflect.Descriptor instead.
func (*Resource_Image) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Resource_Image) GetResourceReference() string {
	if x != nil {
		return x.ResourceReference
	}
	return ""
}

func (x *Resource_Image) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Resource_Image) GetResourceId() *Resource_ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *Resource_Image) GetTechnicalDetails() *Resource_Image_TechnicalDetails {
	if x != nil {
		return x.TechnicalDetails
	}
	return nil
}

type Resource_SoundRecording_SoundRecordingEdition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             string                                                          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ResourceId       *Resource_ResourceId                                            `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	PLine            *Resource_SoundRecording_SoundRecordingEdition_PLine            `protobuf:"bytes,3,opt,name=p_line,json=pLine,proto3" json:"p_line,omitempty"`
	TechnicalDetails *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails `protobuf:"bytes,4,opt,name=technical_details,json=technicalDetails,proto3" json:"technical_details,omitempty"`
}

func (x *Resource_SoundRecording_SoundRecordingEdition) Reset() {
	*x = Resource_SoundRecording_SoundRecordingEdition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_SoundRecording_SoundRecordingEdition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_SoundRecording_SoundRecordingEdition) ProtoMessage() {}

func (x *Resource_SoundRecording_SoundRecordingEdition) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_SoundRecording_SoundRecordingEdition.ProtoReflect.Descriptor instead.
func (*Resource_SoundRecording_SoundRecordingEdition) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 4, 0}
}

func (x *Resource_SoundRecording_SoundRecordingEdition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Resource_SoundRecording_SoundRecordingEdition) GetResourceId() *Resource_ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *Resource_SoundRecording_SoundRecordingEdition) GetPLine() *Resource_SoundRecording_SoundRecordingEdition_PLine {
	if x != nil {
		return x.PLine
	}
	return nil
}

func (x *Resource_SoundRecording_SoundRecordingEdition) GetTechnicalDetails() *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails {
	if x != nil {
		return x.TechnicalDetails
	}
	return nil
}

type Resource_SoundRecording_Contributor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Resource_SoundRecording_Contributor) Reset() {
	*x = Resource_SoundRecording_Contributor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_SoundRecording_Contributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_SoundRecording_Contributor) ProtoMessage() {}

func (x *Resource_SoundRecording_Contributor) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_SoundRecording_Contributor.ProtoReflect.Descriptor instead.
func (*Resource_SoundRecording_Contributor) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 4, 1}
}

type Resource_SoundRecording_SoundRecordingEdition_PLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year      string `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	PLineText string `protobuf:"bytes,2,opt,name=p_line_text,json=pLineText,proto3" json:"p_line_text,omitempty"`
}

func (x *Resource_SoundRecording_SoundRecordingEdition_PLine) Reset() {
	*x = Resource_SoundRecording_SoundRecordingEdition_PLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_PLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_SoundRecording_SoundRecordingEdition_PLine) ProtoMessage() {}

func (x *Resource_SoundRecording_SoundRecordingEdition_PLine) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_SoundRecording_SoundRecordingEdition_PLine.ProtoReflect.Descriptor instead.
func (*Resource_SoundRecording_SoundRecordingEdition_PLine) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 4, 0, 0}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_PLine) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *Resource_SoundRecording_SoundRecordingEdition_PLine) GetPLineText() string {
	if x != nil {
		return x.PLineText
	}
	return ""
}

type Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TechnicalResourceDetailsReference string                                                                       `protobuf:"bytes,1,opt,name=technical_resource_details_reference,json=technicalResourceDetailsReference,proto3" json:"technical_resource_details_reference,omitempty"`
	DeliveryFile                      *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile `protobuf:"bytes,2,opt,name=delivery_file,json=deliveryFile,proto3" json:"delivery_file,omitempty"`
	IsClip                            bool                                                                         `protobuf:"varint,3,opt,name=is_clip,json=isClip,proto3" json:"is_clip,omitempty"`
	ClipDetails                       *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails  `protobuf:"bytes,4,opt,name=clip_details,json=clipDetails,proto3" json:"clip_details,omitempty"`
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails) Reset() {
	*x = Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails) ProtoMessage() {}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails.ProtoReflect.Descriptor instead.
func (*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 4, 0, 1}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails) GetTechnicalResourceDetailsReference() string {
	if x != nil {
		return x.TechnicalResourceDetailsReference
	}
	return ""
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails) GetDeliveryFile() *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile {
	if x != nil {
		return x.DeliveryFile
	}
	return nil
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails) GetIsClip() bool {
	if x != nil {
		return x.IsClip
	}
	return false
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails) GetClipDetails() *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails {
	if x != nil {
		return x.ClipDetails
	}
	return nil
}

type Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                 string                                                                            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	AudioCodecType       string                                                                            `protobuf:"bytes,2,opt,name=audio_codec_type,json=audioCodecType,proto3" json:"audio_codec_type,omitempty"`
	NumberOfChannels     uint32                                                                            `protobuf:"varint,3,opt,name=number_of_channels,json=numberOfChannels,proto3" json:"number_of_channels,omitempty"`
	SamplingRate         float32                                                                           `protobuf:"fixed32,4,opt,name=sampling_rate,json=samplingRate,proto3" json:"sampling_rate,omitempty"`
	BitsPerSample        uint32                                                                            `protobuf:"varint,5,opt,name=bits_per_sample,json=bitsPerSample,proto3" json:"bits_per_sample,omitempty"`
	File                 *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File `protobuf:"bytes,6,opt,name=file,proto3" json:"file,omitempty"`
	IsProvidedInDelivery bool                                                                              `protobuf:"varint,7,opt,name=is_provided_in_delivery,json=isProvidedInDelivery,proto3" json:"is_provided_in_delivery,omitempty"`
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile) Reset() {
	*x = Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile) ProtoMessage() {}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile.ProtoReflect.Descriptor instead.
func (*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 4, 0, 1, 0}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile) GetAudioCodecType() string {
	if x != nil {
		return x.AudioCodecType
	}
	return ""
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile) GetNumberOfChannels() uint32 {
	if x != nil {
		return x.NumberOfChannels
	}
	return 0
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile) GetSamplingRate() float32 {
	if x != nil {
		return x.SamplingRate
	}
	return 0
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile) GetBitsPerSample() uint32 {
	if x != nil {
		return x.BitsPerSample
	}
	return 0
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile) GetFile() *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile) GetIsProvidedInDelivery() bool {
	if x != nil {
		return x.IsProvidedInDelivery
	}
	return false
}

type Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TechnicalResourceDetailsReference string                                                                             `protobuf:"bytes,1,opt,name=technical_resource_details_reference,json=technicalResourceDetailsReference,proto3" json:"technical_resource_details_reference,omitempty"`
	ClipType                          string                                                                             `protobuf:"bytes,2,opt,name=clip_type,json=clipType,proto3" json:"clip_type,omitempty"`
	Timing                            *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing `protobuf:"bytes,3,opt,name=timing,proto3" json:"timing,omitempty"`
	ExpressionType                    string                                                                             `protobuf:"bytes,4,opt,name=expression_type,json=expressionType,proto3" json:"expression_type,omitempty"`
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails) Reset() {
	*x = Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails) ProtoMessage() {}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails.ProtoReflect.Descriptor instead.
func (*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 4, 0, 1, 1}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails) GetTechnicalResourceDetailsReference() string {
	if x != nil {
		return x.TechnicalResourceDetailsReference
	}
	return ""
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails) GetClipType() string {
	if x != nil {
		return x.ClipType
	}
	return ""
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails) GetTiming() *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing {
	if x != nil {
		return x.Timing
	}
	return nil
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails) GetExpressionType() string {
	if x != nil {
		return x.ExpressionType
	}
	return ""
}

type Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri      string                                                                                    `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	HashSum  *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum `protobuf:"bytes,2,opt,name=hash_sum,json=hashSum,proto3" json:"hash_sum,omitempty"`
	FileSize uint64                                                                                    `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File) Reset() {
	*x = Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File) ProtoMessage() {
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File.ProtoReflect.Descriptor instead.
func (*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 4, 0, 1, 0, 0}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File) GetHashSum() *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum {
	if x != nil {
		return x.HashSum
	}
	return nil
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

type Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorithm    string `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	HashSumValue string `protobuf:"bytes,2,opt,name=hash_sum_value,json=hashSumValue,proto3" json:"hash_sum_value,omitempty"`
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum) Reset() {
	*x = Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum) ProtoMessage() {
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum.ProtoReflect.Descriptor instead.
func (*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 4, 0, 1, 0, 0, 0}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum) GetHashSumValue() string {
	if x != nil {
		return x.HashSumValue
	}
	return ""
}

type Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartPoint   uint64 `protobuf:"varint,1,opt,name=start_point,json=startPoint,proto3" json:"start_point,omitempty"`
	EndPoint     uint64 `protobuf:"varint,2,opt,name=end_point,json=endPoint,proto3" json:"end_point,omitempty"`
	DurationUsed string `protobuf:"bytes,3,opt,name=duration_used,json=durationUsed,proto3" json:"duration_used,omitempty"`
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing) Reset() {
	*x = Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing) ProtoMessage() {
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing.ProtoReflect.Descriptor instead.
func (*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 4, 0, 1, 1, 0}
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing) GetStartPoint() uint64 {
	if x != nil {
		return x.StartPoint
	}
	return 0
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing) GetEndPoint() uint64 {
	if x != nil {
		return x.EndPoint
	}
	return 0
}

func (x *Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing) GetDurationUsed() string {
	if x != nil {
		return x.DurationUsed
	}
	return ""
}

type Resource_Image_TechnicalDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TechnicalResourceDetailsReference string                                `protobuf:"bytes,1,opt,name=technical_resource_details_reference,json=technicalResourceDetailsReference,proto3" json:"technical_resource_details_reference,omitempty"`
	ImageCodecType                    string                                `protobuf:"bytes,2,opt,name=image_codec_type,json=imageCodecType,proto3" json:"image_codec_type,omitempty"`
	ImageHeight                       uint64                                `protobuf:"varint,3,opt,name=image_height,json=imageHeight,proto3" json:"image_height,omitempty"`
	ImageWidth                        uint64                                `protobuf:"varint,4,opt,name=image_width,json=imageWidth,proto3" json:"image_width,omitempty"`
	ImageResolution                   string                                `protobuf:"bytes,5,opt,name=image_resolution,json=imageResolution,proto3" json:"image_resolution,omitempty"`
	File                              *Resource_Image_TechnicalDetails_File `protobuf:"bytes,6,opt,name=file,proto3" json:"file,omitempty"`
	IsProvidedInDelivery              bool                                  `protobuf:"varint,7,opt,name=is_provided_in_delivery,json=isProvidedInDelivery,proto3" json:"is_provided_in_delivery,omitempty"`
}

func (x *Resource_Image_TechnicalDetails) Reset() {
	*x = Resource_Image_TechnicalDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_Image_TechnicalDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_Image_TechnicalDetails) ProtoMessage() {}

func (x *Resource_Image_TechnicalDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_Image_TechnicalDetails.ProtoReflect.Descriptor instead.
func (*Resource_Image_TechnicalDetails) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *Resource_Image_TechnicalDetails) GetTechnicalResourceDetailsReference() string {
	if x != nil {
		return x.TechnicalResourceDetailsReference
	}
	return ""
}

func (x *Resource_Image_TechnicalDetails) GetImageCodecType() string {
	if x != nil {
		return x.ImageCodecType
	}
	return ""
}

func (x *Resource_Image_TechnicalDetails) GetImageHeight() uint64 {
	if x != nil {
		return x.ImageHeight
	}
	return 0
}

func (x *Resource_Image_TechnicalDetails) GetImageWidth() uint64 {
	if x != nil {
		return x.ImageWidth
	}
	return 0
}

func (x *Resource_Image_TechnicalDetails) GetImageResolution() string {
	if x != nil {
		return x.ImageResolution
	}
	return ""
}

func (x *Resource_Image_TechnicalDetails) GetFile() *Resource_Image_TechnicalDetails_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Resource_Image_TechnicalDetails) GetIsProvidedInDelivery() bool {
	if x != nil {
		return x.IsProvidedInDelivery
	}
	return false
}

type Resource_Image_TechnicalDetails_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri      string                                        `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	HashSum  *Resource_Image_TechnicalDetails_File_HashSum `protobuf:"bytes,2,opt,name=hash_sum,json=hashSum,proto3" json:"hash_sum,omitempty"`
	FileSize uint64                                        `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
}

func (x *Resource_Image_TechnicalDetails_File) Reset() {
	*x = Resource_Image_TechnicalDetails_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_Image_TechnicalDetails_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_Image_TechnicalDetails_File) ProtoMessage() {}

func (x *Resource_Image_TechnicalDetails_File) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_Image_TechnicalDetails_File.ProtoReflect.Descriptor instead.
func (*Resource_Image_TechnicalDetails_File) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 5, 0, 0}
}

func (x *Resource_Image_TechnicalDetails_File) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Resource_Image_TechnicalDetails_File) GetHashSum() *Resource_Image_TechnicalDetails_File_HashSum {
	if x != nil {
		return x.HashSum
	}
	return nil
}

func (x *Resource_Image_TechnicalDetails_File) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

type Resource_Image_TechnicalDetails_File_HashSum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorithm    string `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	HashSumValue string `protobuf:"bytes,2,opt,name=hash_sum_value,json=hashSumValue,proto3" json:"hash_sum_value,omitempty"`
}

func (x *Resource_Image_TechnicalDetails_File_HashSum) Reset() {
	*x = Resource_Image_TechnicalDetails_File_HashSum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_resource_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_Image_TechnicalDetails_File_HashSum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_Image_TechnicalDetails_File_HashSum) ProtoMessage() {}

func (x *Resource_Image_TechnicalDetails_File_HashSum) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_resource_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_Image_TechnicalDetails_File_HashSum.ProtoReflect.Descriptor instead.
func (*Resource_Image_TechnicalDetails_File_HashSum) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_resource_proto_rawDescGZIP(), []int{0, 5, 0, 0, 0}
}

func (x *Resource_Image_TechnicalDetails_File_HashSum) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *Resource_Image_TechnicalDetails_File_HashSum) GetHashSumValue() string {
	if x != nil {
		return x.HashSumValue
	}
	return ""
}

var File_ddex_v1beta1_resource_proto protoreflect.FileDescriptor

var file_ddex_v1beta1_resource_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x64, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x22, 0x8a, 0x1f, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x64, 0x65, 0x78,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x1a, 0x6d, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x73,
	0x72, 0x63, 0x12, 0x4b, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x72, 0x69, 0x65, 0x74, 0x61, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x72, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x49, 0x64,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x72, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x49, 0x64, 0x1a,
	0x54, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x72, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x72, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x72, 0x69, 0x65, 0x74,
	0x61, 0x72, 0x79, 0x49, 0x64, 0x1a, 0x2d, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x1a, 0x9a, 0x01, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x6c,
	0x65, 0x1a, 0x8f, 0x14, 0x0a, 0x0e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x73, 0x0a, 0x17, 0x73, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x64, 0x65, 0x78,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x36, 0x0a, 0x17, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x70,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4f, 0x66, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x8a, 0x0e, 0x0a, 0x15, 0x53, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x06, 0x70, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x64, 0x64, 0x65, 0x78,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x45,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x4c,
	0x69, 0x6e, 0x65, 0x12, 0x79, 0x0a, 0x11, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c,
	0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x63, 0x68,
	0x6e, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x10, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x3b,
	0x0a, 0x05, 0x50, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x70,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x1a, 0x86, 0x0b, 0x0a, 0x10,
	0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x4f, 0x0a, 0x24, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x21,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x7e, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x43, 0x6c, 0x69, 0x70, 0x12, 0x7b, 0x0a, 0x0c, 0x63, 0x6c,
	0x69, 0x70, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x58, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x65,
	0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x43,
	0x6c, 0x69, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0xfd, 0x04, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x64,
	0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x69, 0x74,
	0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x62, 0x69, 0x74, 0x73, 0x50, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x12, 0x72, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x5e, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x63,
	0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x64, 0x49, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x1a, 0x88, 0x02, 0x0a,
	0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x81, 0x01, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68,
	0x5f, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x66, 0x2e, 0x64, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61,
	0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x53,
	0x75, 0x6d, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x53, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0x4d, 0x0a, 0x07, 0x48, 0x61, 0x73, 0x68,
	0x53, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x73, 0x75, 0x6d, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x68, 0x53,
	0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x8a, 0x03, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4f, 0x0a, 0x24, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x21, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x77, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5f, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x6f,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x6f, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e,
	0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x27,
	0x0a, 0x0f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x6b, 0x0a, 0x06, 0x54, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x73, 0x65, 0x64, 0x1a, 0x0d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x1a, 0xc6, 0x06, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a,
	0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x42, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x11, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x65,
	0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x10,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x1a, 0xd9, 0x04, 0x0a, 0x10, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4f, 0x0a, 0x24, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x21, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x46, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x63, 0x68,
	0x6e, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x64, 0x49, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x1a, 0xdb,
	0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x55, 0x0a, 0x08, 0x68, 0x61, 0x73,
	0x68, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x64, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69,
	0x63, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x53, 0x75, 0x6d, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x53, 0x75, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0x4d, 0x0a,
	0x07, 0x48, 0x61, 0x73, 0x68, 0x53, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x73,
	0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x68, 0x61, 0x73, 0x68, 0x53, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x2f, 0x67, 0x6f, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ddex_v1beta1_resource_proto_rawDescOnce sync.Once
	file_ddex_v1beta1_resource_proto_rawDescData = file_ddex_v1beta1_resource_proto_rawDesc
)

func file_ddex_v1beta1_resource_proto_rawDescGZIP() []byte {
	file_ddex_v1beta1_resource_proto_rawDescOnce.Do(func() {
		file_ddex_v1beta1_resource_proto_rawDescData = protoimpl.X.CompressGZIP(file_ddex_v1beta1_resource_proto_rawDescData)
	})
	return file_ddex_v1beta1_resource_proto_rawDescData
}

var file_ddex_v1beta1_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_ddex_v1beta1_resource_proto_goTypes = []interface{}{
	(*Resource)(nil),                                                                                 // 0: ddex.v1beta1.Resource
	(*Resource_ResourceId)(nil),                                                                      // 1: ddex.v1beta1.Resource.ResourceId
	(*Resource_ProprietaryId)(nil),                                                                   // 2: ddex.v1beta1.Resource.ProprietaryId
	(*Resource_DisplayTitle)(nil),                                                                    // 3: ddex.v1beta1.Resource.DisplayTitle
	(*Resource_DisplayArtist)(nil),                                                                   // 4: ddex.v1beta1.Resource.DisplayArtist
	(*Resource_SoundRecording)(nil),                                                                  // 5: ddex.v1beta1.Resource.SoundRecording
	(*Resource_Image)(nil),                                                                           // 6: ddex.v1beta1.Resource.Image
	(*Resource_SoundRecording_SoundRecordingEdition)(nil),                                            // 7: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition
	(*Resource_SoundRecording_Contributor)(nil),                                                      // 8: ddex.v1beta1.Resource.SoundRecording.Contributor
	(*Resource_SoundRecording_SoundRecordingEdition_PLine)(nil),                                      // 9: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.PLine
	(*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails)(nil),                           // 10: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails
	(*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile)(nil),              // 11: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.DeliveryFile
	(*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails)(nil),               // 12: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.ClipDetails
	(*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File)(nil),         // 13: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.DeliveryFile.File
	(*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum)(nil), // 14: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.DeliveryFile.File.HashSum
	(*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing)(nil),        // 15: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.ClipDetails.Timing
	(*Resource_Image_TechnicalDetails)(nil),                                                          // 16: ddex.v1beta1.Resource.Image.TechnicalDetails
	(*Resource_Image_TechnicalDetails_File)(nil),                                                     // 17: ddex.v1beta1.Resource.Image.TechnicalDetails.File
	(*Resource_Image_TechnicalDetails_File_HashSum)(nil),                                             // 18: ddex.v1beta1.Resource.Image.TechnicalDetails.File.HashSum
}
var file_ddex_v1beta1_resource_proto_depIdxs = []int32{
	5,  // 0: ddex.v1beta1.Resource.sound_recording:type_name -> ddex.v1beta1.Resource.SoundRecording
	6,  // 1: ddex.v1beta1.Resource.image:type_name -> ddex.v1beta1.Resource.Image
	2,  // 2: ddex.v1beta1.Resource.ResourceId.proprietary_id:type_name -> ddex.v1beta1.Resource.ProprietaryId
	7,  // 3: ddex.v1beta1.Resource.SoundRecording.sound_recording_edition:type_name -> ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition
	3,  // 4: ddex.v1beta1.Resource.SoundRecording.display_title:type_name -> ddex.v1beta1.Resource.DisplayTitle
	4,  // 5: ddex.v1beta1.Resource.SoundRecording.display_artist:type_name -> ddex.v1beta1.Resource.DisplayArtist
	8,  // 6: ddex.v1beta1.Resource.SoundRecording.contributor:type_name -> ddex.v1beta1.Resource.SoundRecording.Contributor
	1,  // 7: ddex.v1beta1.Resource.Image.resource_id:type_name -> ddex.v1beta1.Resource.ResourceId
	16, // 8: ddex.v1beta1.Resource.Image.technical_details:type_name -> ddex.v1beta1.Resource.Image.TechnicalDetails
	1,  // 9: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.resource_id:type_name -> ddex.v1beta1.Resource.ResourceId
	9,  // 10: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.p_line:type_name -> ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.PLine
	10, // 11: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.technical_details:type_name -> ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails
	11, // 12: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.delivery_file:type_name -> ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.DeliveryFile
	12, // 13: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.clip_details:type_name -> ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.ClipDetails
	13, // 14: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.DeliveryFile.file:type_name -> ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.DeliveryFile.File
	15, // 15: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.ClipDetails.timing:type_name -> ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.ClipDetails.Timing
	14, // 16: ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.DeliveryFile.File.hash_sum:type_name -> ddex.v1beta1.Resource.SoundRecording.SoundRecordingEdition.TechnicalDetails.DeliveryFile.File.HashSum
	17, // 17: ddex.v1beta1.Resource.Image.TechnicalDetails.file:type_name -> ddex.v1beta1.Resource.Image.TechnicalDetails.File
	18, // 18: ddex.v1beta1.Resource.Image.TechnicalDetails.File.hash_sum:type_name -> ddex.v1beta1.Resource.Image.TechnicalDetails.File.HashSum
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_ddex_v1beta1_resource_proto_init() }
func file_ddex_v1beta1_resource_proto_init() {
	if File_ddex_v1beta1_resource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ddex_v1beta1_resource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_ResourceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_ProprietaryId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_DisplayTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_DisplayArtist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_SoundRecording); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_SoundRecording_SoundRecordingEdition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_SoundRecording_Contributor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_SoundRecording_SoundRecordingEdition_PLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_DeliveryFile_File_HashSum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_SoundRecording_SoundRecordingEdition_TechnicalDetails_ClipDetails_Timing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_Image_TechnicalDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_Image_TechnicalDetails_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_resource_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_Image_TechnicalDetails_File_HashSum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ddex_v1beta1_resource_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Resource_SoundRecording_)(nil),
		(*Resource_Image_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ddex_v1beta1_resource_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ddex_v1beta1_resource_proto_goTypes,
		DependencyIndexes: file_ddex_v1beta1_resource_proto_depIdxs,
		MessageInfos:      file_ddex_v1beta1_resource_proto_msgTypes,
	}.Build()
	File_ddex_v1beta1_resource_proto = out.File
	file_ddex_v1beta1_resource_proto_rawDesc = nil
	file_ddex_v1beta1_resource_proto_goTypes = nil
	file_ddex_v1beta1_resource_proto_depIdxs = nil
}
