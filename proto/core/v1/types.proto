syntax = "proto3";

package core.v1;

import "core/v1beta1/types.proto";
import "ddex/v1beta1/deal.proto";
import "ddex/v1beta1/ern.proto";
import "ddex/v1beta1/mead.proto";
import "ddex/v1beta1/party.proto";
import "ddex/v1beta1/pie.proto";
import "ddex/v1beta1/release.proto";
import "ddex/v1beta1/resource.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/OpenAudio/go-openaudio/pkg/api/core/v1";

message PingRequest {}

message PingResponse {
  string message = 1;
}

message GetHealthRequest {}

message GetHealthResponse {}

message GetStatusRequest {}

message GetStatusResponse {
  message ProcessInfo {
    enum ProcessState {
      PROCESS_STATE_UNSPECIFIED = 0;
      PROCESS_STATE_STARTING = 1;
      PROCESS_STATE_RUNNING = 2;
      PROCESS_STATE_SLEEPING = 3;
      PROCESS_STATE_COMPLETED = 4;
      PROCESS_STATE_ERROR = 5;
    }

    message ProcessStateInfo {
      ProcessState state = 1;
      google.protobuf.Timestamp started_at = 2;
      google.protobuf.Timestamp completed_at = 3;
      string error = 4;
      string metadata = 5;
    }

    ProcessStateInfo abci = 1;
    ProcessStateInfo registry_bridge = 2;
    ProcessStateInfo echo_server = 3;
    ProcessStateInfo sync_tasks = 4;
    ProcessStateInfo peer_manager = 5;
    ProcessStateInfo data_companion = 6;
    ProcessStateInfo cache = 7;
    ProcessStateInfo log_sync = 8;
    ProcessStateInfo state_sync = 9;
    ProcessStateInfo mempool_cache = 10;
  }

  message NodeInfo {
    string endpoint = 1;
    string comet_address = 2;
    string eth_address = 3;
    string node_type = 4;
  }

  message ChainInfo {
    string chain_id = 1;
    int64 current_height = 2;
    string current_block_hash = 3;
    int64 total_tx_count = 4;
  }

  message SyncInfo {
    bool synced = 1;
    oneof sync_mode {
      StateSyncInfo state_sync = 2;
      BlockSyncInfo block_sync = 3;
    }

    message StateSyncInfo {
      enum Phase {
        PHASE_UNSPECIFIED = 0;
        PHASE_STARTING = 1;
        PHASE_DOWNLOADING_CHUNKS = 2;
        PHASE_RECONSTRUCTING_CHUNKS = 3;
        PHASE_RESTORING_PG_DUMP = 4;
        PHASE_BLOCK_SYNC = 5;
        PHASE_COMPLETED = 6;
      }

      Phase phase = 1;
      SnapshotMetadata snapshot = 2;
      int64 downloaded_chunks = 3;
      int64 chunk_fetchers = 4;
      google.protobuf.Timestamp started_at = 5;
      google.protobuf.Timestamp completed_at = 6;
    }

    message BlockSyncInfo {
      int64 block_diff = 1;
      NodeInfo head_source = 2;
      int64 head_height = 3;
      int64 sync_height = 4;
      google.protobuf.Timestamp started_at = 5;
      google.protobuf.Timestamp completed_at = 6;
    }
  }

  message PruningInfo {
    bool enabled = 1;
    int64 retain_blocks = 2;
    int64 earliest_height = 3;
  }

  message ResourceInfo {
    int64 db_size = 1;
    int64 chain_size = 2;
    int64 mem_size = 3;
    int64 cpu_usage = 4;
    int64 mem_usage = 5;
    int64 disk_usage = 6;
    int64 disk_free = 7;
  }

  message MempoolInfo {
    int64 tx_count = 1;
    int64 tx_size = 2;
    int64 max_tx_count = 3;
    int64 max_tx_size = 4;
  }

  message SnapshotInfo {
    bool enabled = 1;
    repeated SnapshotMetadata snapshots = 2;
  }

  message PeerInfo {
    message Peer {
      string endpoint = 1;
      string comet_address = 2;
      string eth_address = 3;
      string node_type = 4;

      bool connectrpc_client = 5;
      bool connectrpc_healthy = 6;

      bool cometrpc_client = 7;
      bool cometrpc_healthy = 8;

      bool p2p_connected = 9;
      bool p2p_accessible = 10;
    }
    repeated Peer peers = 1;
  }

  bool live = 1;
  bool ready = 2;
  NodeInfo node_info = 3;
  ChainInfo chain_info = 4;
  SyncInfo sync_info = 5;
  PruningInfo pruning_info = 6;
  ResourceInfo resource_info = 7;
  MempoolInfo mempool_info = 8;
  PeerInfo peers = 9;
  SnapshotInfo snapshot_info = 10;
  ProcessInfo process_info = 11;
}

message GetNodeInfoRequest {}

message GetNodeInfoResponse {
  string chainid = 1;
  bool synced = 2;
  string comet_address = 3;
  string eth_address = 4;
  int64 current_height = 5;
}

message GetBlockRequest {
  int64 height = 1;
}

message GetBlockResponse {
  Block block = 1;
  int64 current_height = 2;
}

message GetBlocksRequest {
  repeated int64 height = 1;
}

message GetBlocksResponse {
  map<int64, Block> blocks = 1;
  int64 current_height = 2;
}

message GetTransactionRequest {
  string tx_hash = 1;
}

message GetTransactionResponse {
  Transaction transaction = 2;
}

message SendTransactionRequest {
  SignedTransaction transaction = 1;
  core.v1beta1.Transaction transactionv2 = 2;
}

message SendTransactionResponse {
  Transaction transaction = 1;
  core.v1beta1.TransactionReceipt transaction_receipt = 2;
}

message ForwardTransactionRequest {
  SignedTransaction transaction = 1;
  core.v1beta1.Transaction transactionv2 = 2;
}

message ForwardTransactionResponse {}

message GetRegistrationAttestationRequest {
  ValidatorRegistration registration = 1;
}

message GetRegistrationAttestationResponse {
  string signature = 1;
  ValidatorRegistration registration = 2;
}

message GetDeregistrationAttestationRequest {
  ValidatorDeregistration deregistration = 1;
}

message GetDeregistrationAttestationResponse {
  string signature = 1;
  ValidatorDeregistration deregistration = 2;
}

message Block {
  int64 height = 1;
  string hash = 2;
  string chain_id = 3;
  string proposer = 4;
  google.protobuf.Timestamp timestamp = 5;
  repeated Transaction transactions = 6;
}

message Transaction {
  string hash = 1;
  SignedTransaction transaction = 2;
  string chain_id = 3;
  int64 height = 4;
  string block_hash = 5;
  google.protobuf.Timestamp timestamp = 6;
  core.v1beta1.Transaction transactionv2 = 7;
}

message SignedTransaction {
  string signature = 1;
  string request_id = 2;
  oneof transaction {
    TrackPlays plays = 1000;
    ValidatorRegistrationLegacy validator_registration = 1001;
    SlaRollup sla_rollup = 1002;
    ManageEntityLegacy manage_entity = 1003;
    ValidatorMisbehaviorDeregistration validator_deregistration = 1004;
    StorageProof storage_proof = 1005;
    StorageProofVerification storage_proof_verification = 1006;
    Attestation attestation = 1007;
    ddex.v1beta1.NewReleaseMessage release = 1008;
    RewardMessage reward = 1009;
    FileUpload file_upload = 1010;
  }
}

message TrackPlays {
  repeated TrackPlay plays = 1;
}

message ValidatorRegistrationLegacy {
  string endpoint = 1;
  string comet_address = 2;
  string eth_block = 3;
  string node_type = 4;
  string sp_id = 5;
  bytes pub_key = 6;
  int64 power = 7;
}

message TrackPlay {
  string user_id = 1;
  string track_id = 2;
  google.protobuf.Timestamp timestamp = 3;
  string signature = 4;
  string city = 5;
  string region = 6;
  string country = 7;
}

message SlaRollup {
  google.protobuf.Timestamp timestamp = 1;
  int64 block_start = 2;
  int64 block_end = 3;
  repeated SlaNodeReport reports = 4;
}

message SlaNodeReport {
  string address = 1;
  int32 num_blocks_proposed = 2;
}

message ManageEntityLegacy {
  int64 user_id = 1;
  string entity_type = 2;
  int64 entity_id = 3;
  string action = 4;
  string metadata = 5;
  string signature = 6;
  string signer = 7;
  string nonce = 8;
}

message ValidatorMisbehaviorDeregistration {
  string comet_address = 1;
  bytes pub_key = 2;
}

message StorageProof {
  int64 height = 1;
  string address = 2;
  repeated string prover_addresses = 3;
  string cid = 4;
  bytes proof_signature = 5;
}

message StorageProofVerification {
  int64 height = 1;
  bytes proof = 2;
}

message Attestation {
  repeated string signatures = 1;
  oneof body {
    ValidatorRegistration validator_registration = 1000;
    ValidatorDeregistration validator_deregistration = 1001;
  }
}

message ValidatorRegistration {
  string delegate_wallet = 1;
  string endpoint = 2;
  string node_type = 3;
  string sp_id = 4;
  int64 eth_block = 5;
  string comet_address = 6;
  bytes pub_key = 7;
  int64 power = 8;
  int64 deadline = 9;
}

message ValidatorDeregistration {
  string comet_address = 1;
  bytes pub_key = 2;
  int64 deadline = 3;
}

message GetStoredSnapshotsRequest {}

message GetStoredSnapshotsResponse {
  repeated SnapshotMetadata snapshots = 1;
}

message SnapshotMetadata {
  int64 height = 1;
  string hash = 2;
  int64 chunk_count = 3;
  string chain_id = 4;
}

message ClaimAuthority {
  string address = 1;
  string name = 2;
}

message Reward {
  string reward_id = 1;
  uint64 amount = 2;
  string name = 3;
  repeated ClaimAuthority claim_authorities = 4;
}

message GetRewardsRequest {
  string claim_authority = 1;
}

message GetRewardsResponse {
  repeated GetRewardResponse rewards = 1;
}

message GetRewardAttestationRequest {
  string eth_recipient_address = 1;
  string reward_address = 2; // The deployed reward address (new programmatic rewards)
  string specifier = 3;
  string claim_authority = 4;
  string signature = 5;
  uint64 amount = 6;
  string reward_id = 7; // Legacy reward_id (for backwards compatibility)
}

message GetRewardAttestationResponse {
  string owner = 1;
  string attestation = 2;
}

message SlashRecommendation {
  string address = 1;
  google.protobuf.Timestamp start = 2;
  google.protobuf.Timestamp end = 3;
  int32 missedSLAs = 4;
  int64 Amount = 5;
}

message GetSlashAttestationRequest {
  SlashRecommendation data = 1;
}

message GetSlashAttestationResponse {
  string signature = 1;
  string endpoint = 2;
}

message GetSlashAttestationsRequest {
  GetSlashAttestationRequest request = 1;
}

message GetSlashAttestationsResponse {
  repeated GetSlashAttestationResponse attestations = 1;
}

message GetERNRequest {
  string address = 1;
}

message GetERNResponse {
  ddex.v1beta1.NewReleaseMessage ern = 1;
}

message GetPartyRequest {
  string address = 1;
}

message GetPartyResponse {
  ddex.v1beta1.Party party = 1;
}

message GetResourceRequest {
  string address = 1;
}

message GetResourceResponse {
  ddex.v1beta1.Resource resource = 1;
}

message GetReleaseRequest {
  string address = 1;
}

message GetReleaseResponse {
  ddex.v1beta1.Release release = 1;
}

message GetDealRequest {
  string address = 1;
}

message GetDealResponse {
  ddex.v1beta1.Deal deal = 1;
}

message GetMEADRequest {
  string address = 1;
}

message GetMEADResponse {
  ddex.v1beta1.MeadMessage mead = 1;
}

message GetPIERequest {
  string address = 1;
}

message GetPIEResponse {
  ddex.v1beta1.PieMessage pie = 1;
}

message RewardMessage {
  oneof action {
    CreateReward create = 1000;
    DeleteReward delete = 1001;
  }
}

message CreateReward {
  string reward_id = 1;
  string name = 2;
  uint64 amount = 3;
  repeated ClaimAuthority claim_authorities = 4;
  int64 deadline_block_height = 5;
  string signature = 6; // Signature over deterministic reward data
}

message DeleteReward {
  string address = 1; // The deployed reward address
  int64 deadline_block_height = 2;
  string signature = 3; // Signature over deterministic delete data
}

message GetRewardRequest {
  string address = 1; // The deployed reward address
  string txhash = 2;
}

message GetRewardResponse {
  string address = 1;
  string reward_id = 2;
  string name = 3;
  uint64 amount = 4;
  repeated string claim_authorities = 5;
  string sender = 6;
  int64 block_height = 7;
}

message RewardAttestationSignature {
  string eth_recipient_address = 1;
  uint64 amount = 2;
  string reward_address = 3; // Binds signature to specific deployed reward
  string reward_id = 4;
  string specifier = 5;
  string claim_authority = 6;
}

message UploadSignature {
  string cid = 1;
}

// reported by validators to chain on a file upload that contains a signature
// this tx is used to tie ERNs to CIDs and confirm ownership
message FileUpload {
  // address that was recovered from the signature
  string uploader_address = 1;
  // hex stringified signature that was passed to mediorum on upload
  string upload_signature = 2;
  // cid of file that was uploaded, orig_cid in mediorum
  string cid = 3;
  // mediorum specific upload id
  string upload_id = 4;
  // transcoded cid (e.g., 320kbps version for audio)
  string transcoded_cid = 5;
  // validator address that processed the upload
  string validator_address = 6;
  // signature from the validator node
  string validator_signature = 7;
}

message GetStreamURLsSignature {
  // addresses to stream (can be ERN, release, or resource addresses)
  repeated string addresses = 1;
  google.protobuf.Timestamp expires_at = 2;
}

// requests stream urls from the content node
// signature signed by owner of ERN
message GetStreamURLsRequest {
  string signature = 1;
  // addresses to stream (can be ERN, release, or resource addresses)
  // - ERN address: returns all streamable resources in the ERN
  // - release address: returns all resources associated with that release
  // - resource address: returns that specific resource
  // all addresses are resolved back to their parent ERN to verify ownership
  repeated string addresses = 2;
  google.protobuf.Timestamp expires_at = 3;
}

message GetStreamURLsResponse {
  message EntityStreamURLs {
    // type of entity (ern, release, or resource)
    string entity_type = 1;
    // reference from the ERN (e.g., "R1" for release or "A1" for resource)
    string entity_reference = 2;
    // signed content URLs to stream the content
    repeated string urls = 3;
    // parent ERN address this entity belongs to
    string ern_address = 4;
  }

  // Key is the entity address (ERN, release, or resource address)
  // Value contains the streaming URLs and metadata for that entity
  map<string, EntityStreamURLs> entity_stream_urls = 1;
}

message GetUploadByCIDRequest {
  string cid = 1;
}

message GetUploadByCIDResponse {
  bool exists = 1;
  string uploader_address = 2;
  string original_cid = 3;
  string transcoded_cid = 4;
}
