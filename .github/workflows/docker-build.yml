name: Docker Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o openaudio-amd64 ./cmd/openaudio

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./cmd/openaudio/Dockerfile
          platforms: linux/amd64
          push: true
          tags: openaudio/go-openaudio:${{ github.sha }}-amd64
          build-args: |
            PREBUILT_BINARY=openaudio-amd64
            GIT_SHA=${{ github.sha }}
          target: prod

  build-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o openaudio-arm64 ./cmd/openaudio

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./cmd/openaudio/Dockerfile
          platforms: linux/arm64
          push: true
          tags: openaudio/go-openaudio:${{ github.sha }}-arm64
          build-args: |
            PREBUILT_BINARY=openaudio-arm64
            GIT_SHA=${{ github.sha }}
          target: prod

  merge-manifests:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push multi-platform manifest
        run: |
          docker buildx imagetools create -t openaudio/go-openaudio:${{ github.sha }} \
            openaudio/go-openaudio:${{ github.sha }}-amd64 \
            openaudio/go-openaudio:${{ github.sha }}-arm64
