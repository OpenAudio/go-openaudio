name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v0.1.0)'
        required: true
        type: string
      release_notes:
        description: 'Release notes'
        required: false
        type: string
        default: ''

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build binaries
        run: |
          mkdir -p dist
          GOOS=linux GOARCH=amd64 go build -o dist/openaudio-linux-amd64 ./cmd/openaudio
          GOOS=linux GOARCH=arm64 go build -o dist/openaudio-linux-arm64 ./cmd/openaudio
          GOOS=darwin GOARCH=amd64 go build -o dist/openaudio-darwin-amd64 ./cmd/openaudio
          GOOS=darwin GOARCH=arm64 go build -o dist/openaudio-darwin-arm64 ./cmd/openaudio

      - name: Create tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -a ${{ inputs.version }} -m "Release ${{ inputs.version }}"
          git push origin ${{ inputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.version }}
          name: ${{ inputs.version }}
          body: ${{ inputs.release_notes }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/openaudio-linux-amd64
            dist/openaudio-linux-arm64
            dist/openaudio-darwin-amd64
            dist/openaudio-darwin-arm64

  build-docker-amd64:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o openaudio-amd64 ./cmd/openaudio

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./cmd/openaudio/Dockerfile
          platforms: linux/amd64
          push: true
          tags: openaudio/go-openaudio:${{ inputs.version }}-amd64
          build-args: |
            PREBUILT_BINARY=openaudio-amd64
            GIT_SHA=${{ github.sha }}
          target: prod

  build-docker-arm64:
    needs: create-release
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o openaudio-arm64 ./cmd/openaudio

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./cmd/openaudio/Dockerfile
          platforms: linux/arm64
          push: true
          tags: openaudio/go-openaudio:${{ inputs.version }}-arm64
          build-args: |
            PREBUILT_BINARY=openaudio-arm64
            GIT_SHA=${{ github.sha }}
          target: prod

  merge-docker-manifests:
    needs: [build-docker-amd64, build-docker-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push multi-platform manifest
        run: |
          docker buildx imagetools create -t openaudio/go-openaudio:${{ inputs.version }} \
            -t openaudio/go-openaudio:latest \
            openaudio/go-openaudio:${{ inputs.version }}-amd64 \
            openaudio/go-openaudio:${{ inputs.version }}-arm64

  publish-to-buf:
    needs: create-release
    uses: ./.github/workflows/buf-publish.yml
    with:
      label: ${{ inputs.version }}
    secrets: inherit
